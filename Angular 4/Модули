==========================================================================
                    Модули

Можно разделить приложение на модули с декоратором NgModule и в родительском модуле добавить их в imports
У каждого модуля свои роуты. Только у дочерних модулей у RouterModule используется не forRoot() а forChild()

Если нужно использовать одну директиву или пайп в нескольких модулях то создается SharedModule и он
уже добавляется во все остальные модули.

Ленивая загрузка делается в роутах с полем loadChildren: './path/to/module#НазваниеМодуля' webpack будет знать об этом
Для защиты вместо canActivate используется canLoad

Для прелодинга в AppRoutingModule в методе forRoot есть второй параметр preloadingStrategy: PreloadAllModules

Lazy loading модуль как отдельное приложение со своим скоупом собирается в отдельный чанк и при поиске компонентов сервисов директив или интерсептора из других модулей нужно импортировать их через общий типа SharedModule. Тоесть при поиске зависимостей angular не поднимается до AppModule для Lazy loading модуля он сам и является вершиной графа зависимостей и прямое добавление сущностей из других модулей в провайдер ломает этот подход делая его частью общего дерева зависимостей что заставляет его грузится в режиме обычного модуля сразу. Выходом может быть только использование import так как эта конструкция срабатывает только в момент запроса к модулю.
