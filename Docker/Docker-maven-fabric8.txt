CREATE DOCKER IMAGE IN Fabric8

For managing docker with maven we can use plugin fabric8 for exmple:

`https://github.com/springframeworkguru/spring-boot-docker/blob/fabric8-add/pom.xml`

For create image run: `mvn clean package docker:build`

Very important:
1. pom.xml settings see: `https://github.com/springframeworkguru/spring-boot-docker/blob/fabric8-add/pom.xml`
2. Right locate for Dockerfile see same repo: `main/docker/Dockerfile`


PUBLISHING TO DOCKER HUB AND CREATE DOCKER IMAGE

1.Go to `settings.xml` 
   (thought IDEA Right click inside pom.xml -> Maven -> Open 'settings.xml')
   (Or path /Users/jt/.m2/settings.xml)
Set username and password to docker.io

2.`mvn clean package docker:build docker:push`


MANAGE IMAGE WITH MAVEN

`mvn docker:run` - like a with `-d` in daemon thread

`mvn docker:start` - interactive session like a `docker logs -f <container name>`

<run>
    <ports>
		<port>8080:8080</port>
	</ports>
</run>



`mvn docker:stop`
`mvn docker:build`
`mvn docker:build docker: push` - for pushing into repository




POM.XML PLUGIN

1, For single container
`
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.20.0</version>

                <configuration>

                    <!--<dockerHost>http://127.0.0.1:2375</dockerHost>-->
                    <dockerHost>unix:///var/run/docker.sock</dockerHost>

                    <verbose>true</verbose>
                    <images>
                        <image>
                            <name>${docker.image.prefix}/${docker.image.name}</name>
                            <build>
                                <dockerFileDir>${project.basedir}/target/dockerfile/</dockerFileDir>

                                <!--copies artficact to docker build dir in target-->
                                <assembly>
                                    <descriptorRef>artifact</descriptorRef>
                                </assembly>
                                <tags>
                                    <tag>latest</tag>
                                    <tag>${project.version}</tag>
                                </tags>
                            </build>
                            <run>
                                <ports>
                                    <port>8080:8080</port>
                                </ports>
                            </run>
                        </image>
                    </images>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.gmavenplus</groupId>
                <artifactId>gmavenplus-plugin</artifactId>
                <version>1.6.2</version>
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <scripts>
                        <script>file:///${project.basedir}/src/main/scripts/BuildDockerfile.groovy</script>
                    </scripts>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.codehaus.groovy</groupId>
                        <artifactId>groovy-all</artifactId>
                        <!-- any version of Groovy \>= 1.5.0 should work here -->
                        <version>2.4.15</version>
                        <scope>runtime</scope>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>
`

2. Multiple containers 

https://github.com/springframeworkguru/spring-boot-docker/blob/docker-multiple-containers/pom.xml
`
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.20.0</version>

				<configuration>

                    <!--<dockerHost>http://127.0.0.1:2375</dockerHost>-->
                    <dockerHost>unix:///var/run/docker.sock</dockerHost>

                    <verbose>true</verbose>
					<images>
						<image>
							<name>${docker.image.prefix}/${docker.image.name}</name>
							<build>
								<dockerFileDir>${project.basedir}/target/dockerfile/</dockerFileDir>

                                <!--copies artficact to docker build dir in target-->
								<assembly>
									<descriptorRef>artifact</descriptorRef>
								</assembly>
								<tags>
									<tag>latest</tag>
									<tag>${project.version}</tag>
								</tags>
							</build>
                            <run>
                                <ports>
                                    <port>8080:8080</port>
                                </ports>
                                <links>
                                    <link>myrabbitmq:rabbitmq</link>
                                </links>
                                <env>
                                    <SPRING_RABBITMQ_HOST>rabbitmq</SPRING_RABBITMQ_HOST>
                                </env>
                                <dependsOn>
                                    <container>myrabbitmq</container>
                                    <container>pageviewservice</container>
                                </dependsOn>
                            </run>
						</image>
                        <!--mysql container-->
						<image>
							<name>mysql</name>
                            <alias>mysqldb</alias>
							<run>
                                <!--expose port for dn-->
								<ports>
                                    <port>3306:3306</port>
                                </ports>
                                <!--set env prams for mysql image-->
                                <env>
                                    <MYSQL_DATABASE>pageviewservice</MYSQL_DATABASE>
                                    <MYSQL_ALLOW_EMPTY_PASSWORD>yes</MYSQL_ALLOW_EMPTY_PASSWORD>
                                </env>
                                <!--wait for db to start-->
                                <wait>
                                    <time>10000</time>
                                </wait>
							</run>
						</image>
                        <!--rabbit container-->
                        <image>
                            <name>rabbitmq</name>
                            <alias>myrabbitmq</alias>
                            <run>
                                <ports>
                                    <port>5671</port>
                                    <port>5672</port>
                                    <port>4369</port>
                                    <port>25672</port>
                                </ports>
                                <!--wait for db to start-->
                                <wait>
                                    <time>10000</time>
                                </wait>
                            </run>
                        </image>

                        <!--docker run &#45;&#45;name pageviewservice -p 8081:8081 &#45;&#45;link rabbitmq:rabbitmq &#45;&#45;link mysqldb:mysqldb-->
                        <!-- -e SPRING_DATASOURCE_URL=jdbc:mysql://mysqldb:3306/pageviewservice -e SPRING_PROFILES_ACTIVE=mysql-->
                        <!-- -e SPRING_RABBITMQ_HOST=rabbitmq springframeworkguru/pageviewservice-->
                        <image>
                            <name>springframeworkguru/pageviewservice</name>
                            <alias>pageviewservice</alias>
                            <run>
                                <ports>
                                    <port>8081:8081</port>
                                </ports>
                                <links>
                                    <link>myrabbitmq:rabbitmq</link>
                                    <link>mysqldb:mysqldb</link>
                                </links>
                                <env>
                                    <SPRING_DATASOURCE_URL>jdbc:mysql://mysqldb:3306/pageviewservice</SPRING_DATASOURCE_URL>
                                    <SPRING_PROFILES_ACTIVE>mysql</SPRING_PROFILES_ACTIVE>
                                    <SPRING_RABBITMQ_HOST>rabbitmq</SPRING_RABBITMQ_HOST>
                                </env>
                                <dependsOn>
                                    <container>myrabbitmq</container>
                                    <container>mysql</container>
                                </dependsOn>
                                <wait>
                                    <http>
                                        <url>http://localhost:8081/health</url>
                                        <method>GET</method>
                                        <status>200..399</status>
                                    </http>
                                    <time>75000</time>
                                </wait>
                            </run>
                        </image>
					</images>
				</configuration>
			</plugin>
            <plugin>
                <groupId>org.codehaus.gmavenplus</groupId>
                <artifactId>gmavenplus-plugin</artifactId>
                <version>1.6.2</version>
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <scripts>
                        <script>file:///${project.basedir}/src/main/scripts/BuildDockerfile.groovy</script>
                    </scripts>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.codehaus.groovy</groupId>
                        <artifactId>groovy-all</artifactId>
                        <!-- any version of Groovy \>= 1.5.0 should work here -->
                        <version>2.4.15</version>
                        <scope>runtime</scope>
                    </dependency>
                </dependencies>
            </plugin>
		</plugins>
	</build>
`