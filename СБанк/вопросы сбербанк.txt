1. Принципы ООП, как реализована инкапсуляция в Java
2. Модификаторы доступа
3. Принципы SOLID 
4. Опигите примитивные типы java
5. Классы внутренние, вложенные
6. Замыкания
7. Методы класса Object
8. Иерархия коллекций
9. Отличие Set от List, приведите примеры реализаций
10. Когда имеет смысл использовать LinkedList вместо ArrayList?
11. Устройство HashMap
12. Особенности Java 8
13. Зачем нужны лямбды?
14. Зачем нужны исключения?
15. Назовите паттерны проектирования, которые вы использовали
16. Scope'ы бинов в Spring'e
17. Какие книги читали по Java?
18. Как работает сборщик мусора в Java? Можно ли вызвать сборку мусора. 
19. Как устроена память в Java? 
20. Что такое happens-before? Приведите примеры.
21. Что такое deadlock? Как его избежать? 
22. ЧТо такое состояние гонок? 
23. Что такое Executor'ы? Зачем они нужны? 
24. В чем отличия между equals и ==? Контракты по equals и hashcode.
25. Что такое дерево? Можно ли сделать так, чтобы обычное двоичное дерево выродилось в связный список? 
26. Какие есть способны конфигурирования ApplicationContext Spring'a.
27. Принципы организации многопоточности в java
28. SQL

Вопросы по JS: 
1. В чем отличие между == и ===
2. Что происходит при, например, 1 == "1"
3. Как добавить метод к объекту? 
4. Как реализовано наследование? 
5. Что такое promise? 
6. С какими фреймворками JS работали?

